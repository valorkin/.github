name: Claude Code

on:
  workflow_dispatch:

  pull_request:
    types: [opened, reopened, synchronize]
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@main
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}

  code_review:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Authenticate GitHub CLI
        run: gh auth setup-git
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Claude Code
        id: claude
        uses: valorkin/claude-code-action@feat-silence
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          model: claude-sonnet-4-20250514
          silent: true
          allowed_tools: "mcp__github__create_pending_pull_request_review,mcp__github__add_pull_request_review_comment_to_pending_review,mcp__github__submit_pending_pull_request_review,mcp__github__get_pull_request_diff"
          direct_prompt: |
            You are a senior product engineer.
            Pay extra attention to coding standards, security practices,
            test coverage, readability, maintainability, and performance.

            Focus on:
            - Correctness & hidden bugs (edge cases, race conditions, off-by-one, etc.)
            - Performance hot-spots (Big-O, memory, DB queries, async misuse)
            - Security implications and vulnerabilities (injection, XSS, secrets exposure)
            - Readability & maintainability (naming, duplication, comments)
            - Test coverage gaps (suggest unit/integration tests)
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Documentation updates if needed
            - Architecture and design decisions

            Make sure that:
              - in typescript code all functions and methods have to have type annotations of arguments and return value
              - all typescript code is compatible with `strict` mode

            Please comment on this PR and provide inline feedback using the GitHub review system. Follow these steps:
            1. **Start a review**: Use `mcp__github__create_pending_pull_request_review` to begin a pending review
            2. **Get diff information**: Use `mcp__github__get_pull_request_diff` to understand the code changes and line numbers
            3. **Add inline comments**: Use `mcp__github__add_pull_request_review_comment_to_pending_review` for each specific piece of feedback on particular lines. If there is already a comment from claude, do not add new comment and update it instead.
            4. **Submit the review**: Use `mcp__github__submit_pending_pull_request_review` with event type "COMMENT" (not "REQUEST_CHANGES") to publish all comments as a non-blocking review
            5. **Important**: Submit as "COMMENT" type so the review doesn't block the PR.
            6. **Important**: wrap all of the claude review comment in <details> tag; <summary> tag has to contain only "Claude comment inside" text
          
